<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!--UserService的创建权交给了spring，这就是控制反转-->
    <!--<bean id="UserService" class="com.bupt.ioc.demo1.UserServiceImpl">-->
        <!--&lt;!&ndash;设置属性，将依赖的属性设置进去，这就是依赖注入&ndash;&gt;-->
        <!--<property name="name" value="李四"></property>-->
    <!--</bean>-->

    <!--&lt;!&ndash;Bean的实例化的三种方式============================&ndash;&gt;-->
    <!--&lt;!&ndash;第一种：无参构造器的方式&ndash;&gt;-->
    <!--<bean id="Bean1" class="com.bupt.ioc.demo2.Bean1"/>-->
    <!--&lt;!&ndash;第二种：静态工厂的方式&ndash;&gt;-->
    <!--<bean id="Bean2" class="com.bupt.ioc.demo2.Bean2Factory" factory-method="createBean2"/>-->
    <!--&lt;!&ndash;第三种：实例工厂的方式&ndash;&gt;-->
    <!--<bean id="Bean3Factory" class="com.bupt.ioc.demo2.Bean3Factory"/>-->
    <!--<bean id="Bean3" factory-bean="Bean3Factory" factory-method="createBean3"/>-->

    <!--&lt;!&ndash;Bean的作用范围=====================================&ndash;&gt;-->
    <!--<bean id="Person" class="com.bupt.ioc.demo3.Person"/>-->
    <!--<bean id="Person" class="com.bupt.ioc.demo3.Person" scope="prototype"/>-->

    <!--<bean id="man" class="com.bupt.ioc.demo3.Man" init-method="setup" destroy-method="teardown">-->
        <!--<property name="name" value="李四"/>-->
    <!--</bean>-->
    <!--不需要设置id（设置id的目的是我们自己调用），因为只要存在实现BeanPostProcessor 类的方法，创建所有的Bean都会执行其中的那两个方法。是spring调用的。-->
    <!---->
    <!--<bean class="com.bupt.ioc.demo3.MyBeanPostProcessor"/>-->
    <!--<bean id="userDao" class="com.bupt.ioc.demo3.UserDaoImpl"/>-->

    <!--Bean的构造方法的属性注入-->
    <!--<bean id="user" class="com.bupt.ioc.demo4.User">-->
        <!--<constructor-arg name="name" value="张三"/>-->
        <!--<constructor-arg name="age" value="23"/>-->
    <!--</bean>-->

    <!--Bean的settere方法的属性注入-->
    <!--<bean id="person" class="com.bupt.ioc.demo4.Person">-->
        <!--<property name="name" value="张三"/>-->
        <!--<property name="age" value="32"/>-->
        <!--&lt;!&ndash;通过ref对对象属性注入&ndash;&gt;-->
        <!--<property name="cat" ref="cat"/>-->
    <!--</bean>-->
    <!--<bean id="cat" class="com.bupt.ioc.demo4.Cat">-->
        <!--<property name="name" value="kitty"/>-->
    <!--</bean>-->

    <!--Bean的p命名空间的属性注入-->
    <bean id="person" class="com.bupt.ioc.demo4.Person" p:name="xiaoming" p:age="12" p:cat-ref="cat"/>
    <bean id="cat" class="com.bupt.ioc.demo4.Cat" p:name="tom"/>
</beans>